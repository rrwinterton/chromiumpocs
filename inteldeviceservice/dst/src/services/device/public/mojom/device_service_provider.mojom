// Copyright 2021 The Chromium Authors
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module device.mojom;

enum DeviceServiceType {
  kCPUComputeCapacity,
  kGPUComputeCapacity,
  kVPUComputeCapacity
};

enum Capacity {
  kCapacityIdle = 0,
  kCapacityUnder,
  kCapacityMeet,
  kCapacityOver,
};

struct LbrData {
    uint32 timestamp;
};

// This interface is used to get the service of the device from
// DeviceServiceService.
interface DeviceServiceProvider {
  // Associates an interface to the service provider. The initial service
  // will then be returned.
  AddListenerAndGetCurrentService(
    pending_remote<DeviceServiceProviderClient> client)
      => (DeviceServiceType service);

  SubmitTaskCapacityHint(uint32 system_time, uint32 process_id,
    uint32 thread_id, Capacity capacity)
      => (int32 request_id);

  StartCollectingLbr(uint32 process_id, uint32 thread_id);
  StopCollectingLbr(uint32 process_id, uint32 thread_id);
  GetLbrData(uint32 process_id, uint32 thread_id) => (LbrData lbr_data);
};

// Interface that client of the DeviceServiceProvider interface must implement
// to observe service changes.
interface DeviceServiceProviderClient {
  // Interface used to notify service changes.
  OnServiceChanged(DeviceServiceType service);
};
